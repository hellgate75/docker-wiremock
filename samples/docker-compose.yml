version: '3.2'

services:
  wiremock-server:
    build:
    image: wiremock-server
    container_name: wiremock-server
    volumes:
      - "/wiremock/mappings", "/wiremock/__files", "/wiremock/certificates", "/var/local/zookeeper", "/var/local/zookeeper-logs", "/var/local/zookeeper-ssl"
      - master-data:/aptly
      - master-nginx:/etc/ngnix
    ports:
      - 9999:9999
    networks:
      debian-network:
      debian-seekers:
        aliases:
          - debian-srv1
    environment:
      - "REPO_NAME=debian-personal"
      - "REPO_PORT=9999"
      - "DISTRIBUTION=trusty"
      - "COMPONENTS=main"
      - "ARCHITECTURES=amd64"
    cap_add:
      - ALL
    cap_drop:
      - NET_ADMIN
      - SYS_ADMIN
  zookeeper-server:
    image: zookeeper
    container_name: zookeeper-server
    volumes:
      - slave-data:/aptly
    links:
      - "debian-master:debian-repo"
    environment:
      - "DEB_REPO_NAME=debian-personal"
      - "REPO_PORT=9999"
      - "REPO_ADDRESS=debian-repo"
      - "MIRROR_REPO_NAME=remote-debian"
      - "DISTRIBUTION=trusty"
      - "COMPONENTS=main"
      - "ARCHITECTURES=amd64"
    cap_add:
      - ALL
    cap_drop:
      - NET_ADMIN
      - SYS_ADMIN
    networks:
      debian-network:
      debian-pushers:
        aliases:
          - debian-worker1
networks:
  debian-network:
    #this should be an overlay network of a swarm cluster
  debian-seekers:
    #this should be an external network on some specific app domain for pulling from repo
  debian-pushers:
      #this should be an external network on some specific app domain to run jobs on the client machine and push to repo
volumes:
  wiremock-mappings:
  wiremock-files:
  wiremock-certificates:
  slave-data:
